{"version":3,"sources":["components/filter.js","components/form.js","components/notification.js","services/personsData.js","App.js","serviceWorker.js","index.js"],"names":["Filter","props","value","onChange","Form","onSubmit","valueNewName","onChangeNote","valueNewNro","onChangeNro","type","Notification","message","className","baseUrl","axios","get","then","response","data","newObject","post","catch","console","log","id","put","delete","App","useState","persons","setPersons","newName","setNewName","newNro","setNewNro","filter","setFilter","deleteId","setDeleteId","alertMessage","setAlertMessage","errorMessage","setErrorMessage","useEffect","phonebookService","initialData","length","handleDelete","event","preventDefault","personToKill","find","x","name","window","confirm","returnedBooking","map","booking","setTimeout","n","error","Note","key","tel","onMouseOver","Book","personsToShow","person","number","toLowerCase","includes","eventFilter","target","idToUpdate","phoneBookObject","personIdToUpdate","personsIndex","findIndex","obj","personsToChange","returnedData","concat","eventNro","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5ee3065.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n\n    return(\n     <form>\n      Filter shown with name:<br/> \n        <input \n        value= {props.value}\n        onChange={props.onChange}\n        /> \n      </form>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst Form = (props) => {\n\n    return(\n     <form onSubmit={props.onSubmit}>\n\n<div>\n  name: <input \n  value={props.valueNewName} \n  onChange={props.onChangeNote}\n  />\n</div>\n\n<div>\n  tel: <input \n  value={props.valueNewNro} \n  onChange={props.onChangeNro}\n  />\n</div>\n\n<div>\n  <button type=\"submit\">add</button>\n</div>\n\n</form>\n    )\n}\n\nexport default Form","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={type}>\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n    .catch(console.log('error during create'))\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const deleteData = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)  \n    return request.then(response => response.data)  \n  }\n  \n  export default { \n    getAll, \n    create, \n    update, \n    deleteData\n  }","import { render } from '@testing-library/react'\nimport React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport Filter from './components/filter'\nimport Form from './components/form'\nimport Notification from './components/notification'\nimport phonebookService from './services/personsData'\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNro, setNewNro ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ deleteId, setDeleteId ] = useState([])\n  const [alertMessage, setAlertMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n\n  \n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(initialData => {\n        setPersons(initialData)\n      })\n  }, [])\n\n  console.log(persons.length)\n  \n// --------NEW BOOKING -------------------------//\n  const addNewName = (event) => {\n    event.preventDefault()\n\n  const names = persons.map(person => {\n    return person.name\n  })\n   const isAlready = names.includes(newName)\n   // if name already exists, will ask to change number\n   if (isAlready) { \n    if(window.confirm(`Name ${newName} already exists, do you want to update the number?`)){\n      const idToUpdate = persons.find(x=> x.name === newName)\n      \n      const phoneBookObject = {\n        name: newName,\n        number: newNro,\n        id: idToUpdate.id\n        \n      } \n      const personIdToUpdate = persons.find(x=> x.name === newName).id\n\n      // UPDATE NUMBER\n      phonebookService\n      .update(personIdToUpdate, phoneBookObject)\n      .then(()=>{\n      const personsIndex = persons.findIndex((obj => obj.id === personIdToUpdate))\n      const personsToChange = persons\n      personsToChange[personsIndex].number = newNro\n      setPersons(personsToChange)\n    })\n    .then(setAlertMessage(newName + 'Â´s number is now updated!'))\n      \n    } \n    // if name is new -> \n   } else if(newName === ''){setErrorMessage('Name is missing')\n   } else if(newNro === ''){setErrorMessage('Number is missing')\n   \n   } else {\n\n    const phoneBookObject = {\n      name: newName,\n      number: newNro,\n    }\n\n    phonebookService\n      .create(phoneBookObject)\n      .then(returnedData => {\n        setPersons(persons.concat(returnedData))\n      }\n      ).then(setAlertMessage(newName + ' is now added to phone Bookkel'))\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n      })\n      \n   }\n   // reset states\n   setNewName('')\n   setNewNro('')\n   setTimeout(() => { setErrorMessage(null)}, 4000)\n   setTimeout(() => { setAlertMessage(null)}, 4000)\n  }\n  // --------DELETE BOOKING -------------------------//\n  const handleDelete = (event) => {\n    event.preventDefault()\n    const personToKill = persons.find(x=> x.id === deleteId).name\n\n    if(window.confirm('Kill ' + personToKill + '?')){\n      \n       phonebookService\n       .deleteData(deleteId).then(returnedBooking => {\n        setPersons(persons.map(booking => booking.id !== personToKill ? booking : returnedBooking))\n       })\n       .then\n          (()=>{\n            setAlertMessage( personToKill + ' is removed from phoneboo succesfully!')\n             setTimeout(()=> {\n             setAlertMessage(null)\n             },4000)}\n         )\n       .then(()=>{setPersons(persons.filter (n=> n.id !== deleteId))})\n       .catch(error => {\n         setErrorMessage(personToKill + ' is already removed from phonebook')\n         setTimeout(()=> {\n           setErrorMessage(null)\n         },4000)\n         })\n       }\n \n\n \n      // const personsAfterDie = persons.filter(person => {\n        //return person.id !== deleteId\n        \n    }\n      // setPersons(personsAfterDie)\n  \n  \n  const Note = (props) => {\n      return (\n        <div key={props.id}>\n          <form onSubmit = {handleDelete}>\n          <strong>\n            {props.name}\n          </strong>\n          , tel: {props.tel}\n          <input type = 'hidden' name = 'id' value = {props.id}/>\n           <button\n           onMouseOver = {()=> setDeleteId(props.id)}\n            type = 'submit'\n           >Delete</button>\n          </form>\n        </div>\n      )\n    }\n  \n  const Book = (props) => {\n  const personsToShow = props.person\n      return(\n          <div>\n              {personsToShow.map(person => \n              <Note key={person.id} name={person.name} tel={person.number }id = {person.id} />\n              )}\n        </div>\n      )\n  }\n\n  const handleFilterChange = (eventFilter) => {\n    setFilter(eventFilter.target.value)\n    // console.log(eventFilter.target.value)\n  }\n\n  const handleNoteChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNroChange = (eventNro) => { \n    setNewNro(eventNro.target.value)\n  }\n  const personsToShow = filter\n  ? persons.filter (persons => persons.name.toLowerCase().includes(filter.toLowerCase())) \n  : persons\n\n\n  \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={alertMessage} type=\"greenAlert\"/>\n      <Notification message={errorMessage} type=\"redAlert\"/>\n      <Filter value = {filter} onChange={handleFilterChange} />\n      <h2>Add a new name</h2>\n      <Form \n        onSubmit={addNewName}\n        valueNewName={newName} \n        onChangeNote={handleNoteChange}\n        valueNewNro={newNro}\n        onChangeNro={handleNroChange}\n      />\n      <h2>Numbers</h2>\n      <Book person={personsToShow} />\n      <p>{persons.length === 0 && '...loading'}</p>\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}